version: v1.0
name: Semaphore Python / Django Example Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
global_job_config:
  prologue:
    commands:
      - sem-version python 3.10
blocks:
  - name: Install Dependencies
    task:
      prologue:
        commands:
          - sudo apt-get update
          - sudo apt-get install -y software-properties-common
          - 'sudo add-apt-repository ppa:deadsnakes/ppa -y || true'
          - sudo apt-get install -y python3.10 python3.10-venv python3.10-dev
      jobs:
        - name: pip
          commands:
            - checkout
            - cache restore
            - python3.10 -m venv ~/virtualenv || python3.10 -m ensurepip --default-pip
            - source ~/virtualenv/bin/activate
            - pip install --upgrade pip
            - pip install -r requirements.txt
  - name: Run Code Analysis
    task:
      prologue:
        commands:
          - checkout
          - cache restore
          - pip install -r requirements.txt --cache-dir .pip_cache
          - pip install --upgrade pylint
      jobs:
        - name: Pylint
          commands:
            - pip install --upgrade pylint pylint-django pylint-plugin-utils
            - 'pylint --disable=all --enable=E,F $(git ls-files ''*.py'' | grep -v ''migrations'' | grep -v ''settings.py'' | grep -v ''manage.py'')'
  - name: Run Unit Tests
    task:
      prologue:
        commands:
          - sem-service start mysql
          - checkout
          - cache restore
          - pip install -r requirements.txt --cache-dir .pip_cache
      jobs:
        - name: Model Test
          commands:
            - python manage.py test tasks.tests.test_models
        - name: View Test
          commands:
            - python manage.py test tasks.tests.test_views
  - name: Run Browser Tests
    task:
      env_vars:
        - name: DB_NAME
          value: pydjango
      prologue:
        commands:
          - sem-service start mysql
          - sudo apt-get update && sudo apt-get install -y -qq mysql-client
          - mysql --host=0.0.0.0 -uroot -e "create database $DB_NAME"
          - checkout
          - cache restore
          - pip install -r requirements.txt --cache-dir .pip_cache
          - 'nohup python manage.py runserver 127.0.0.1:8732 &'
      jobs:
        - name: Browser Test
          commands:
            - python manage.py test tasks.tests.test_browser
  - name: Run Security Tests
    task:
      jobs:
        - name: Deployment Checklist
          commands:
            - checkout
            - cache restore
            - pip install -r requirements.txt --cache-dir .pip_cache
            - python manage.py check --deploy --fail-level ERROR
